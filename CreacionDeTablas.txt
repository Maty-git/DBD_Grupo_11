CREATE TABLE IF NOT EXISTS permisos (
    id_permisos INT PRIMARY KEY,
    permisos_cliente BOOLEAN,
    permisos_jefe BOOLEAN,
    permisos_globales BOOLEAN
);

CREATE TABLE IF NOT EXISTS jefe_de_tienda (
    id_jefe SERIAL PRIMARY KEY,
    correo_jefe VARCHAR(100) NOT NULL UNIQUE,
    nombre_jefe VARCHAR(100) NOT NULL,
    contrase単a_jefe VARCHAR(100) NOT NULL,
    id_permiso INT,
    FOREIGN KEY (id_permiso) REFERENCES permisos(id_permisos)
);

CREATE TABLE IF NOT EXISTS tienda (
    id_tienda SERIAL PRIMARY KEY,
    id_jefe INT,
    nombre_tienda VARCHAR(100) NOT NULL,
    ubicacion_tienda VARCHAR(100),
    FOREIGN KEY (id_jefe) REFERENCES jefe_de_tienda(id_jefe)
);

CREATE TABLE IF NOT EXISTS cliente (
    id_cliente INT PRIMARY KEY,
    nombre_cliente VARCHAR(50),
    correo_cliente VARCHAR(50),
    contrase単a_cliente VARCHAR(50),
    id_permisos INT,
    id_tienda INT,
    FOREIGN KEY(id_permisos) REFERENCES permisos(id_permisos),
    FOREIGN KEY(id_tienda) REFERENCES tienda(id_tienda)
);

CREATE TABLE IF NOT EXISTS ubicacion_usuario (
    id_ubicacion INT PRIMARY KEY,
    comuna_usuario VARCHAR(50),
    ciudad_usuario VARCHAR(50),
    calle_usuario VARCHAR(50),
    id_cliente INT,
    FOREIGN KEY(id_cliente) REFERENCES cliente(id_cliente)
);

CREATE TABLE IF NOT EXISTS carro_de_compra (
    id_carro_compra INT PRIMARY KEY,
    stock_producto INT,
    id_cliente INT,
    FOREIGN KEY(id_cliente) REFERENCES cliente(id_cliente)
);

CREATE TABLE IF NOT EXISTS ubicacion_tienda (
    id_ubicacion_tienda SERIAL PRIMARY KEY,
    comuna_tienda VARCHAR(100) NOT NULL,
    calle_tienda VARCHAR(100) NOT NULL,
    ciudad_tienda VARCHAR(100) NOT NULL,
    id_tienda INT,
    FOREIGN KEY (id_tienda) REFERENCES tienda(id_tienda)
);

CREATE TABLE IF NOT EXISTS admin (
    id_admin SERIAL PRIMARY KEY,
    correo_admin VARCHAR(100) NOT NULL UNIQUE,
    nombre_admin VARCHAR(100) NOT NULL,
    ubicacion_admin VARCHAR(100),
    contrase単a_admin VARCHAR(100) NOT NULL,
    id_permisos INT,
    FOREIGN KEY (id_permisos) REFERENCES permisos(id_permisos)
);

CREATE TABLE IF NOT EXISTS producto (
    id_producto SERIAL PRIMARY KEY,
    stock_producto INTEGER NOT NULL,
    url_producto VARCHAR(255),
    nombre_producto VARCHAR(100) NOT NULL,
    precio_producto INTEGER,
    id_jefe INTEGER,
    id_tienda INTEGER,
    id_carro_compra INTEGER,
    id_ubicacion_usuario INTEGER,
    id_ubicacion_tienda INTEGER,
    FOREIGN KEY (id_jefe) REFERENCES jefe_de_tienda(id_jefe) ON DELETE SET NULL,
    FOREIGN KEY (id_tienda) REFERENCES tienda(id_tienda) ON DELETE SET NULL,
    FOREIGN KEY (id_carro_compra) REFERENCES carro_de_compra(id_carro_compra) ON DELETE SET NULL,
    FOREIGN KEY (id_ubicacion_usuario) REFERENCES ubicacion_usuario(id_ubicacion) ON DELETE SET NULL,
    FOREIGN KEY (id_ubicacion_tienda) REFERENCES ubicacion_tienda(id_ubicacion_tienda) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS ranking (
    id_ranking SERIAL PRIMARY KEY,
    top_productos VARCHAR(255),
    id_producto INTEGER,
    FOREIGN KEY (id_producto) REFERENCES producto(id_producto) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS carta (
    id_carta SERIAL PRIMARY KEY,
    a単o_carta INTEGER NOT NULL,
    estado_carta VARCHAR(50),
    rareza_carta VARCHAR(50),
    tipo_de_juego VARCHAR(50),
    id_producto INTEGER,
    FOREIGN KEY (id_producto) REFERENCES producto(id_producto) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS juego_de_mesa (
    id_juego_de_mesa SERIAL PRIMARY KEY,
    tipo_juego_mesa VARCHAR(100),
    tipo_de_juego VARCHAR(50),
    id_producto INTEGER,
    FOREIGN KEY (id_producto) REFERENCES producto(id_producto) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS ranking_carta (
    id_ranking_carta SERIAL PRIMARY KEY,
    top_cartas VARCHAR(255),
    id_carta INTEGER,
    FOREIGN KEY (id_carta) REFERENCES carta(id_carta) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS valoracion (
    id_valoracion INT PRIMARY KEY,
    puntaje_valoracion INT,
    comentario_valoracion CHAR(150)
);

CREATE TABLE IF NOT EXISTS producto_valoracion (
    id_valoracion INT,
    id_producto INT NOT NULL,
    PRIMARY KEY(id_producto, id_valoracion),
    FOREIGN KEY (id_producto) REFERENCES producto(id_producto),
    FOREIGN KEY (id_valoracion) REFERENCES valoracion(id_valoracion)
);

CREATE TABLE IF NOT EXISTS cliente_valoracion (
    id_valoracion INT,
    id_cliente INT NOT NULL,
    PRIMARY KEY(id_cliente, id_valoracion),
    FOREIGN KEY (id_cliente) REFERENCES cliente(id_cliente),
    FOREIGN KEY (id_valoracion) REFERENCES valoracion(id_valoracion)
);
